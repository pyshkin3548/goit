{"version":3,"sources":["webpack:///./js/timer.js","webpack:///./js/promisses_1.js","webpack:///./js/promisses_2.js","webpack:///./js/promisses_3.js","webpack:///./js/color.js"],"names":["refs","clockface","document","querySelector","days","hours","mins","secs","pad","value","String","padStart","TargetTime","Date","getTime","timerId","setInterval","time","startTime","now","deltaTime","Math","floor","textContent","clearInterval","delay","ms","Promise","resolve","setTimeout","logger","console","log","then","users","name","active","toggleUserState","allUsers","userName","updatedUsers","map","user","all","table","makeTransaction","transaction","reject","min","max","random","id","logSuccess","logError","warn","amount","catch","colors","startBtn","stopBtn","bodyRef","switcher","isActive","start","this","switchColors","i","randomIntegerFromInterval","length","style","backgroundColor","stop","addEventListener","bind"],"mappings":"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","file":"main.1935766a72011ec85449.js","sourcesContent":["const refs = {\r\n  clockface: document.querySelector('#timer-1'),\r\n  days: document.querySelector('.value[data-value=\"days\"]'),\r\n  hours: document.querySelector('.value[data-value=\"hours\"]'),\r\n  mins: document.querySelector('.value[data-value=\"mins\"]'),\r\n  secs: document.querySelector('.value[data-value=\"secs\"]'),\r\n};\r\n\r\nfunction updateClockface(time) {\r\n  const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n  const hours = pad(\r\n    Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n  );\r\n  const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n  const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n  refs.days.textContent = `${days}:`;\r\n  refs.hours.textContent = `${hours}:`;\r\n  refs.mins.textContent = `${mins}:`;\r\n  refs.secs.textContent = `${secs}`;\r\n}\r\n\r\nfunction pad(value) {\r\n  return String(value).padStart(2, '0');\r\n}\r\n\r\nconst TargetTime = new Date('Oct 18, 2021').getTime();\r\n\r\nlet timerId = setInterval(() => {\r\n  const startTime = Date.now();\r\n  let deltaTime = TargetTime - startTime;\r\n  updateClockface(deltaTime);\r\n  if (deltaTime < 0) {\r\n    clearInterval(timerId);\r\n    refs.clockface.textContent = 'Finish';\r\n  }\r\n}, 1000);\r\n","const delay = ms => {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(ms);\r\n    }, ms);\r\n  });\r\n};\r\nconst logger = time => console.log(`Resolved after ${time}ms`);\r\n\r\n// Вызовы функции для проверки\r\ndelay(2000).then(logger); // Resolved after 2000ms\r\ndelay(1000).then(logger); // Resolved after 1000ms\r\ndelay(1500).then(logger); // Resolved after 1500ms\r\n","const users = [\r\n  { name: 'Mango', active: true },\r\n  { name: 'Poly', active: false },\r\n  { name: 'Ajax', active: true },\r\n  { name: 'Lux', active: false },\r\n];\r\n\r\nconst toggleUserState = (allUsers, userName) => {\r\n  const updatedUsers = allUsers.map(user =>\r\n    user.name === userName ? { ...user, active: !user.active } : user,\r\n  );\r\n\r\n  return Promise.all(updatedUsers);\r\n};\r\n\r\nconst logger = updatedUsers => console.table(updatedUsers);\r\n\r\n/*\r\n * Сейчас работает так\r\n */\r\n// toggleUserState(users, 'Mango', logger);\r\n// toggleUserState(users, 'Lux', logger);\r\n\r\n/*\r\n * Должно работать так\r\n */\r\ntoggleUserState(users, 'Mango').then(logger);\r\ntoggleUserState(users, 'Lux').then(logger);\r\n","const randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst makeTransaction = transaction => {\r\n  return new Promise((resolve, reject) => {\r\n    const delay = randomIntegerFromInterval(200, 500);\r\n    setTimeout(() => {\r\n      const canProcess = Math.random() > 0.3;\r\n      if (canProcess) {\r\n        resolve({ id: transaction.id, time: delay });\r\n      } else {\r\n        reject(transaction.id);\r\n      }\r\n    }, delay);\r\n  });\r\n};\r\n\r\nconst logSuccess = ({ id, time }) => {\r\n  console.log(`Transaction ${id} processed in ${time}ms`);\r\n};\r\n\r\nconst logError = id => {\r\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n};\r\n\r\n/*\r\n * Работает так\r\n */\r\n// makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\r\n// makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\r\n// makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\r\n// makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\r\n/*\r\n * Должно работать так\r\n */\r\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\r\n\r\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\r\n\r\nmakeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\r\n\r\nmakeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\r\n","const colors = [\r\n  '#FFFFFF',\r\n  '#2196F3',\r\n  '#4CAF50',\r\n  '#FF9800',\r\n  '#009688',\r\n  '#795548',\r\n  '#4205a0',\r\n  '#fcb3f0',\r\n  '#d40e76',\r\n];\r\n\r\nconst refs = {\r\n  startBtn: document.querySelector('button[data-action=\"start\"'),\r\n  stopBtn: document.querySelector('button[data-action=\"stop\"'),\r\n  bodyRef: document.querySelector('body'),\r\n};\r\n\r\nconst randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst switcher = {\r\n  isActive: false,\r\n  start() {\r\n    if (this.isActive) {\r\n      return;\r\n    }\r\n\r\n    this.isActive = true;\r\n    this.switchColors = setInterval(() => {\r\n      const min = 0;\r\n      const max = colors.length - 1;\r\n      let i = randomIntegerFromInterval(min, max);\r\n      refs.bodyRef.style.backgroundColor = colors[i];\r\n      // console.log(colors[i]);\r\n    }, 1000);\r\n  },\r\n\r\n  stop() {\r\n    clearInterval(this.switchColors);\r\n    this.isActive = false;\r\n  },\r\n};\r\n\r\nrefs.startBtn.addEventListener('click', switcher.start.bind(switcher));\r\nrefs.stopBtn.addEventListener('click', switcher.stop.bind(switcher));\r\n"],"sourceRoot":""}